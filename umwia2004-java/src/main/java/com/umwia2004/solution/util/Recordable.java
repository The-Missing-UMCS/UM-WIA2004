package com.umwia2004.solution.util;

import lombok.Getter;
import lombok.RequiredArgsConstructor;

import java.util.function.Function;

/**
 * Abstract class that records actions performed during execution.
 * It allows subclasses to define specific actions and store results.
 *
 * @param <INPUT> The input type for the action.
 * @param <OUTPUT> The output type generated by the action.
 */
@Getter
@RequiredArgsConstructor
public abstract class Recordable<INPUT, OUTPUT> {
    protected final Storage<OUTPUT> storage;

    /**
     * Performs the defined action on the given input and stores the result.
     *
     * @param input The input value to process.
     */
    public void performAction(INPUT input) {
        OUTPUT output = action().apply(input);
        storage.add(output);
    }

    /**
     * Defines the action to be performed. Must be implemented by subclasses.
     *
     * @return A function that processes input and produces an output.
     */
    protected abstract Function<INPUT, OUTPUT> action();
}
